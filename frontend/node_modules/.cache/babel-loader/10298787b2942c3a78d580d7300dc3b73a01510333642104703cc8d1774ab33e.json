{"ast":null,"code":"var _jsxFileName = \"/Users/ayodejiakinola/Documents/gandalf-gate/gandalf-data-aggregator/frontend/src/components/modal.tsx\",\n  _s = $RefreshSig$();\nimport Connect from '@gandalf-network/connect';\nimport { useToastMessage } from '../context/error-context';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  toggleModal\n}) => {\n  _s();\n  const [redirectURL, setRedirectURL] = useState('');\n  const [qrCodeDataUrl, setQrCodeDataUrl] = useState('');\n  const [connectURL, setconnectURL] = useState('');\n  const {\n    showToast\n  } = useToastMessage();\n  useEffect(() => {\n    const generateRedirectURL = async () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        const response = await fetch('http://127.0.0.1:8080/user/generate-callback', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${storedToken}`\n          }\n        });\n        if (!response.ok) {\n          const errorMessage = await response.json();\n          throw new Error(errorMessage[\"message\"]);\n        }\n        const data = await response.json();\n        setRedirectURL(data.callbackURL);\n      } catch (error) {\n        showToast(error.message, {\n          type: 'error'\n        });\n      }\n    };\n    generateRedirectURL();\n  }, []);\n  useEffect(() => {\n    const connect = new Connect({\n      publicKey: '0x02290a12d7ed02b3377e683d3285d6e4282662fc6f6d7496754d4d01e3085e6452',\n      redirectURL: \"redirectURL\",\n      services: {\n        'netflix': true\n      }\n    });\n    const fetchConnectData = async () => {\n      try {\n        const url = await connect.generateURL();\n        const qrCode = await connect.generateQRCode();\n        console.log(url);\n        setQrCodeDataUrl(qrCode);\n      } catch (error) {\n        console.error('Error generating connect data:', error);\n      }\n    };\n    if (redirectURL) {\n      fetchConnectData();\n    }\n  }, [redirectURL]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal opacity-1 fixed w-full h-full top-0 left-0 flex items-center justify-center z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay absolute w-full h-full bg-gray-900 opacity-50 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleModal,\n        className: \"modal-close absolute z-0 top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"fill-current text-white\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"18\",\n          height: \"18\",\n          viewBox: \"0 0 18 18\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: \"(Esc)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-xl p-6 mb-6 relative\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content text-center relative p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-2xl font-bold text-center\",\n              children: \"Connect to Netflix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute z-0 right-0 top-0 mt-4  mr-4 modal-close cursor-pointer\",\n              onClick: toggleModal,\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"fill-current text-black\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"18\",\n                height: \"18\",\n                viewBox: \"0 0 18 18\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm py-2 text-center text-muted-foreground text-gray-500 dark:text-gray-400\",\n            children: \"Scan the QRCode below to connect your netflix account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: qrCodeDataUrl,\n              alt: \"Connect QRCode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Modal, \"SrSu861udqIVrE2Pj+ETr+hutYo=\", false, function () {\n  return [useToastMessage];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["Connect","useToastMessage","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","isOpen","toggleModal","_s","redirectURL","setRedirectURL","qrCodeDataUrl","setQrCodeDataUrl","connectURL","setconnectURL","showToast","generateRedirectURL","storedToken","localStorage","getItem","response","fetch","method","headers","ok","errorMessage","json","Error","data","callbackURL","error","message","type","connect","publicKey","services","fetchConnectData","url","generateURL","qrCode","generateQRCode","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","width","height","viewBox","d","src","alt","_c","$RefreshReg$"],"sources":["/Users/ayodejiakinola/Documents/gandalf-gate/gandalf-data-aggregator/frontend/src/components/modal.tsx"],"sourcesContent":["import Connect  from '@gandalf-network/connect';\nimport { useToastMessage } from '../context/error-context';\nimport { useEffect, useState } from 'react';\n\ninterface ModalProps {\n  isOpen: boolean;\n  toggleModal: () => void;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, toggleModal }) => {\n    const [redirectURL, setRedirectURL] = useState('');\n    const [qrCodeDataUrl, setQrCodeDataUrl] = useState<string>('');\n    const [connectURL, setconnectURL] = useState<string>('');\n    const { showToast } = useToastMessage();\n\n    useEffect(() => {\n        const generateRedirectURL = async () => {\n            try {\n                const storedToken = localStorage.getItem('token');\n                const response = await fetch('http://127.0.0.1:8080/user/generate-callback', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${storedToken}` \n                    },\n                });\n        \n                if (!response.ok) {\n                    const errorMessage = await response.json();\n                    throw new Error(errorMessage[\"message\"]);\n                }\n        \n                const data = await response.json();\n                setRedirectURL(data.callbackURL);\n            } catch (error: any) {\n                showToast(error.message, { type: 'error' });\n            }\n        };\n        \n        generateRedirectURL(); \n    }, []); \n\n    useEffect(() => {\n        const connect = new Connect({\n            publicKey: '0x02290a12d7ed02b3377e683d3285d6e4282662fc6f6d7496754d4d01e3085e6452',\n            redirectURL: \"redirectURL\", \n            services: { 'netflix': true }\n        });\n\n        const fetchConnectData = async () => {\n            try {\n                const url = await connect.generateURL();\n                const qrCode = await connect.generateQRCode();\n                console.log(url)\n                setQrCodeDataUrl(qrCode);\n\n            } catch (error) {\n                console.error('Error generating connect data:', error);\n            }\n        };\n\n        if (redirectURL) {\n          fetchConnectData();\n        }\n    }, [redirectURL]); \n\n  return (\n    <>\n      {isOpen && (\n      <div className=\"modal opacity-1 fixed w-full h-full top-0 left-0 flex items-center justify-center z-10\">\n        <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50 \"></div>\n\n        <div onClick={toggleModal} className=\"modal-close absolute z-0 top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-0\">\n            <svg className=\"fill-current text-white\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n              <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n            </svg>\n            <span className=\"text-sm\">(Esc)</span>\n        </div>\n\n        <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-xl p-6 mb-6 relative\">\n          <div className=\"modal-content text-center relative p-6\">\n            <div className=\"\">\n              <p className=\"text-2xl font-bold text-center\">Connect to Netflix</p>\n              <div className=\"absolute z-0 right-0 top-0 mt-4  mr-4 modal-close cursor-pointer\" onClick={toggleModal}>\n                <svg className=\"fill-current text-black\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n                  <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n                </svg>\n              </div>\n            </div>\n            <p className=\"text-sm py-2 text-center text-muted-foreground text-gray-500 dark:text-gray-400\">\n              Scan the QRCode below to connect your netflix account\n            </p>\n            <div className=\"flex justify-center items-center\">\n              <img src={qrCodeDataUrl} alt=\"Connect QRCode\" />\n            </div>\n          </div>\n        </div>\n      </div>\n     )}\n     </>\n  );\n};\n\n\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}