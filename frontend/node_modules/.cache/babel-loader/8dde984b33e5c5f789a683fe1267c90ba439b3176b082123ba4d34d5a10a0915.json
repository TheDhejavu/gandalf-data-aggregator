{"ast":null,"code":"var _jsxFileName = \"/Users/ayodejiakinola/Documents/gandalf-gate/gandalf-data-aggregator/frontend/src/App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './assets/index.css';\nimport \"./assets/output.css\";\nimport Connect from '@gandalf-network/connect';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  toggleModal\n}) => {\n  _s();\n  const [connectUrl, setConnectUrl] = useState('');\n  const [qrCodeDataUrl, setQrCodeDataUrl] = useState('');\n  useEffect(() => {\n    const connect = new Connect({\n      publicKey: '0x02290a12d7ed02b3377e683d3285d6e4282662fc6f6d7496754d4d01e3085e6452',\n      redirectURL: 'https://yourapp.com/connect-success',\n      services: {\n        'netflix': true\n      }\n    });\n    const fetchConnectData = async () => {\n      try {\n        const url = await connect.generateURL();\n        const qrCode = await connect.generateQRCode();\n        setConnectUrl(url);\n        setQrCodeDataUrl(qrCode);\n      } catch (error) {\n        console.error('Error generating connect data:', error);\n      }\n    };\n    fetchConnectData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay cursor-pointer  absolute w-full h-full bg-gray-900 opacity-60 z-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-0 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"fill-current text-white\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"18\",\n          height: \"18\",\n          viewBox: \"0 0 18 18\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm  cursor-pointer\",\n          onClick: toggleModal,\n          children: \"(Esc)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content py-4 text-center px-6 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl cursor-wait font-bold text-center\",\n            children: \"Connect to Netflix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute z-0 right-0 top-0 mt-4 cursor-pointer mr-4  modal-close cursor-pointer z-0\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"fill-current text-black\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"18\",\n              height: \"18\",\n              viewBox: \"0 0 18 18\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm py-2 text-center text-muted-foreground text-gray-500 dark:text-gray-400\",\n          children: \"Scan the QRCode below to connect your netflix account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: qrCodeDataUrl,\n            alt: \"Connect QRCode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Modal, \"QSoTg9/DGpN7mRWfZIMtnf8EcZE=\");\n_c = Modal;\nconst App = () => {\n  _s2();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n  const [selectedYear, setSelectedYear] = useState('2022');\n  const data = {\n    2022: [20, 25, 30, 28, 35, 32, 40, 38, 45, 42, 50, 48],\n    2023: [22, 27, 35, 33, 40, 38, 45, 42, 50, 48, 55, 52],\n    2024: [25, 30, 38, 36, 43, 41, 48, 46, 53, 51, 58, 56]\n  };\n  const updateChart = () => {\n    const year = selectedYear;\n    // netflixChart.data.datasets[0].data = data[year];\n    // netflixChart.update();\n  };\n\n  // // Initialize the chart\n  // let netflixChart;\n  // const chartRef = useRef(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     type: 'line',\n  //     data: {\n  //       labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  //       datasets: [{\n  //         label: 'Movies Watched',\n  //         data: data[selectedYear],\n  //         backgroundColor: '#FF6E33',\n  //         borderColor: '#FF6E33',\n  //         borderWidth: 1\n  //       }]\n  //     },\n  //     options: {\n  //       scales: {\n  //         y: {\n  //           beginAtZero: true\n  //         }\n  //       }\n  //     }\n  //   };\n\n  //   // netflixChart = new Chart(chartRef.current, config);\n  // }, [selectedYear]);\n\n  // Initialize Connect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      toggleModal: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s2(App, \"W9jFk4UMMDoRUo0P4bjJzVd+xuU=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Connect","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","isOpen","toggleModal","_s","connectUrl","setConnectUrl","qrCodeDataUrl","setQrCodeDataUrl","connect","publicKey","redirectURL","services","fetchConnectData","url","generateURL","qrCode","generateQRCode","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","width","height","viewBox","d","onClick","src","alt","_c","App","_s2","isModalOpen","setIsModalOpen","selectedYear","setSelectedYear","data","updateChart","year","_c2","$RefreshReg$"],"sources":["/Users/ayodejiakinola/Documents/gandalf-gate/gandalf-data-aggregator/frontend/src/App.tsx"],"sourcesContent":["import React, { useState , useEffect} from 'react';\nimport './assets/index.css';\nimport \"./assets/output.css\";\nimport Connect  from '@gandalf-network/connect';\n\n\ninterface ModalProps {\n  isOpen: boolean;\n  toggleModal: () => void;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, toggleModal }) => {\n\n  const [connectUrl, setConnectUrl] = useState<string>('');\n  const [qrCodeDataUrl, setQrCodeDataUrl] = useState<string>('');\n\n  useEffect(() => {\n    const connect = new Connect({\n      publicKey: '0x02290a12d7ed02b3377e683d3285d6e4282662fc6f6d7496754d4d01e3085e6452',\n      redirectURL: 'https://yourapp.com/connect-success',\n      services: { 'netflix': true }\n    });\n\n    const fetchConnectData = async () => {\n      try {\n        const url = await connect.generateURL();\n        const qrCode = await connect.generateQRCode();\n\n        setConnectUrl(url);\n        setQrCodeDataUrl(qrCode);\n\n      } catch (error) {\n        console.error('Error generating connect data:', error);\n      }\n    };\n\n    fetchConnectData();\n  }, []); \n\n\n  return (\n    <>\n      {/* {isOpen && ( */}\n      {/* <div className=\"modal opacity-1 pointer-events-none z-10  w-full h-full top-0 left-0 flex items-center justify-center\"> */}\n        <div className=\"modal-overlay cursor-pointer  absolute w-full h-full bg-gray-900 opacity-60 z-0\"></div>\n\n        <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-0 overflow-y-auto\">\n\n          <div className=\"modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-0\">\n            <svg className=\"fill-current text-white\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n              <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n            </svg>\n            <span className=\"text-sm  cursor-pointer\" onClick={toggleModal}>(Esc)</span>\n          </div>\n\n          <div className=\"modal-content py-4 text-center px-6 relative\">\n            <div className=\"\">\n              <p className=\"text-2xl cursor-wait font-bold text-center\">Connect to Netflix</p>\n              <div className=\"absolute z-0 right-0 top-0 mt-4 cursor-pointer mr-4  modal-close cursor-pointer z-0\">\n                <svg className=\"fill-current text-black\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n                  <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n                </svg>\n              </div>\n            </div>\n            <p className=\"text-sm py-2 text-center text-muted-foreground text-gray-500 dark:text-gray-400\">\n              Scan the QRCode below to connect your netflix account\n            </p>\n            <div className=\"flex justify-center items-center\">\n              <img src={qrCodeDataUrl} alt=\"Connect QRCode\" />\n            </div>\n          </div>\n        </div>\n      {/* </div> */}\n     {/* )} */}\n     </>\n  );\n};\n\nconst App = () => {\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n  const [selectedYear, setSelectedYear] = useState('2022');\n  const data = {\n    2022: [20, 25, 30, 28, 35, 32, 40, 38, 45, 42, 50, 48],\n    2023: [22, 27, 35, 33, 40, 38, 45, 42, 50, 48, 55, 52],\n    2024: [25, 30, 38, 36, 43, 41, 48, 46, 53, 51, 58, 56]\n  };\n\n  const updateChart = () => {\n    const year = selectedYear;\n    // netflixChart.data.datasets[0].data = data[year];\n    // netflixChart.update();\n  };\n\n  // // Initialize the chart\n  // let netflixChart;\n  // const chartRef = useRef(null);\n\n  // useEffect(() => {\n  //   const config = {\n  //     type: 'line',\n  //     data: {\n  //       labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  //       datasets: [{\n  //         label: 'Movies Watched',\n  //         data: data[selectedYear],\n  //         backgroundColor: '#FF6E33',\n  //         borderColor: '#FF6E33',\n  //         borderWidth: 1\n  //       }]\n  //     },\n  //     options: {\n  //       scales: {\n  //         y: {\n  //           beginAtZero: true\n  //         }\n  //       }\n  //     }\n  //   };\n\n  //   // netflixChart = new Chart(chartRef.current, config);\n  // }, [selectedYear]);\n\n  // Initialize Connect\n\n\n  return (\n    <>\n    <Modal isOpen={isModalOpen} toggleModal={toggleModal} />\n    \n      </>\n\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}