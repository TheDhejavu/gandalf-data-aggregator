{"ast":null,"code":"var _jsxFileName = \"/Users/ayodejiakinola/Documents/gandalf-gate/gandalf-data-aggregator/frontend/src/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst ErrorContext = /*#__PURE__*/createContext({\n  errorMessage: null,\n  setError: () => {},\n  showToast: () => {}\n});\nexport const useError = () => {\n  _s();\n  return useContext(ErrorContext);\n};\n_s(useError, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ErrorProvider = ({\n  children\n}) => {\n  _s2();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const setError = message => {\n    setErrorMessage(message);\n  };\n  const showToast = (message, options) => {\n    toast(message, options);\n  };\n  return /*#__PURE__*/_jsxDEV(ErrorContext.Provider, {\n    value: {\n      errorMessage,\n      setError,\n      showToast\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s2(ErrorProvider, \"lUsKU0Uaz4ak6UQkSxcoKd4ffDA=\");\n_c = ErrorProvider;\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"ErrorProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","toast","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","ErrorContext","errorMessage","setError","showToast","useError","_s","ErrorProvider","children","_s2","setErrorMessage","message","options","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","render","$RefreshReg$"],"sources":["/Users/ayodejiakinola/Documents/gandalf-gate/gandalf-data-aggregator/frontend/src/index.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { toast, ToastOptions } from 'react-toastify';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\ninterface ErrorContextType {\n  errorMessage: string | null;\n  setError: (message: string | null) => void;\n  showToast: (message: string, options?: ToastOptions) => void;\n}\n\nconst ErrorContext = createContext<ErrorContextType>({\n  errorMessage: null,\n  setError: () => {},\n  showToast: () => {},\n});\n\nexport const useError = () => useContext(ErrorContext);\n\nexport const ErrorProvider: React.FC = ({ children }) => {\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  const setError = (message: string | null) => {\n    setErrorMessage(message);\n  };\n\n  const showToast = (message: string, options?: ToastOptions) => {\n    toast(message, options);\n  };\n\n  return (\n    <ErrorContext.Provider value={{ errorMessage, setError, showToast }}>\n      {children}\n    </ErrorContext.Provider>\n  );\n};\n\n\nroot.render(\n  <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,KAAK,QAAsB,gBAAgB;AACpD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAQD,MAAMC,YAAY,gBAAGb,aAAa,CAAmB;EACnDc,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBC,SAAS,EAAEA,CAAA,KAAM,CAAC;AACpB,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMjB,UAAU,CAACY,YAAY,CAAC;AAAA;AAACK,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAuB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACvD,MAAM,CAACP,YAAY,EAAEQ,eAAe,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EAErE,MAAMa,QAAQ,GAAIQ,OAAsB,IAAK;IAC3CD,eAAe,CAACC,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMP,SAAS,GAAGA,CAACO,OAAe,EAAEC,OAAsB,KAAK;IAC7DrB,KAAK,CAACoB,OAAO,EAAEC,OAAO,CAAC;EACzB,CAAC;EAED,oBACEhB,OAAA,CAACK,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEZ,YAAY;MAAEC,QAAQ;MAAEC;IAAU,CAAE;IAAAI,QAAA,EACjEA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACT,GAAA,CAhBWF,aAAuB;AAAAY,EAAA,GAAvBZ,aAAuB;AAmBpCV,IAAI,CAACuB,MAAM,eACTxB,OAAA,CAACH,GAAG;EAAAsB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACR,CAAC;;AAED;AACA;AACA;AACAxB,eAAe,CAAC,CAAC;AAAC,IAAAyB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}